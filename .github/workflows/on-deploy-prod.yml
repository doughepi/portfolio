on:
  push:
    branches:
      - main
jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: data-visitor-334805 
      SERVICE_ACCOUNT: github-workflow@data-visitor-334805.iam.gserviceaccount.com
      REPO_NAME: general
      IMAGE_NAME: portfolio
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.BUILD_KEY_PROD }}
          export_default_credentials: true
      - name: Authorize Docker push
        run: gcloud auth configure-docker us-docker.pkg.dev
      - name: Get Commit Hash
        id: commit_hash
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Build and Push Container
        run: |-
            docker build -t us-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ steps.commit_hash.outputs.sha_short }} .
            docker push us-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ steps.commit_hash.outputs.sha_short }}
    outputs:
      image_name: ${{ env.IMAGE_NAME }}
      image_tag: ${{ steps.commit_hash.outputs.sha_short }}
  infrastructure:
    name: "Infrastructure"
    runs-on: ubuntu-latest
    needs:
      - build
    env:
      PROJECT_ID: data-visitor-334805 
      TF_BUCKET: cf7e3478-6c37-4d0f-910c-87e6bda48191 
      DNS_NAME: piper.codes
    steps:
      - name: Install Terraform
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update
          sudo apt-get install terraform -y
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.BUILD_KEY_PROD }}
          export_default_credentials: true
      - name: Terraform Init
        working-directory: ./infrastructure
        run: terraform init -backend-config="bucket=${{ env.TF_BUCKET }}"
      - name: Terraform Apply
        working-directory: ./infrastructure
        run: |
          terraform apply -auto-approve -no-color -var "project_id=${{ env.PROJECT_ID }}" \
          -var "image_name=${{ needs.build.outputs.image_name }}" -var "image_tag=${{ needs.build.outputs.image_tag }}" \
          -var "dns_name=${{ env.DNS_NAME }}"